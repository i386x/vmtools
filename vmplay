#!/bin/bash
#
# File:    ./vmplay
# Author:  Jiří Kučera <sanczes AT gmail.com>
# Date:    2020-03-30 17:02:45 +0200
# Project: Virtual Machine Tools (vmtools)
# Brief:   Run Ansible playbooks on virtual machine
#
# SPDX-License-Identifier: MIT
#

set -euo pipefail

function __path() {
  echo -n "${HOME}/.local/share/$1"
  echo -n ":/usr/local/share/$1"
  echo -n ":/usr/share/$1"
  echo -n "${PATH:+:}${PATH}"
}

# shellcheck source=~/.local/share/clishe/clishe.sh
PATH="$(__path "clishe")" \
. clishe.sh >/dev/null 2>&1 || {
  echo "clishe library is not installed!" >&2
  exit 1
}

PATH=".:$(__path "vmtools")" \
. vmtools.sh >/dev/null 2>&1 || {
  echo "I can't see vmtools.sh. Are vmtools installed?" >&2
  exit 1
}

clishe_init

clishe_defopt VMNAME "a name of virtual machine"
clishe_defopt --dry-run -- "" DRY_RUN <<__HELP__
only print what should be done, do not perform anything
__HELP__
clishe_defopt --inventory=VMANSINV -i -- "specify Ansible inventory" optional
clishe_defopt --help -h -? -- "print this screen and exit" help usage
clishe_defopt --verbose -v -- "" V <<__HELP__
set verbosity level (more --verbose options given means more verbosity)
__HELP__
clishe_defopt "@VAR1=VAL1 ... PLAYBK1 PLAYBK2 ..." "" <<__HELP__
a list if extra variables followed by a list of Ansible playbooks to be
executed
__HELP__

function usage() {
  local _synopsis="VMNAME [--dry-run] [--inventory VMANSINV] [-i VMANSINV]"
  _synopsis="${_synopsis} [--help] [-h?] [--verbose] [-v]"
  _synopsis="${_synopsis} [VAR1=VAL1 [...]] PLAYBK1 [PLAYBK2 [...]]"
  cat <<-__USAGE__
	Run Ansible playbooks on virtual machine.

	Usage: ${clishe_scriptname} ${_synopsis}
	where

	${clishe_helplines}

	Execute Ansible playbooks PLAYBK1, PLAYBK2, ... on VMNAME virtual
	machine with VAR1=VAL1 ... extra variables passed to them.
	__USAGE__
  exit 0
}

clishe_process_options "$@"

VMANSINV="${VMANSINV:-}" DRY_RUN="${DRY_RUN:-}" V="${V}" \
vmtools_vmplay "${VMNAME}" "${clishe_tailopts[@]}"
