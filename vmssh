#!/bin/bash
# SPDX-License-Identifier: MIT
#
# File:    vmssh
# Author:  Jiří Kučera, <sanczes@gmail.com>
# Date:    2020-03-28 18:03:29 +0100
# Project: Virtual Machine Tools (vmtools)
# Brief:   Establish SSH session with virtual machine.
#

set -euo pipefail

PATH=".:/usr/local/share/vmtools:/usr/share/vmtools${PATH:+:}${PATH}" \
. vmtools.sh >/dev/null 2>&1 || {
  echo "I can't see vmtools.sh. Are vmtools installed?" >&2
  exit 1
}

clishe_init

clishe_defopt VMNAME "a name of virtual machine"
clishe_defopt --user=VMUSER -u -- "" optional <<__HELP__
log in as VMUSER; in case of empty value or missing option, user name is read
from VMCFG_USER
__HELP__
clishe_defopt --dry-run -- "" DRY_RUN <<__HELP__
only print what should be done, do not perform anything
__HELP__
clishe_defopt --help -h -? -- "print this screen and exit" help usage
clishe_defopt "@COMMAND" "" <<__HELP__
an optional command that would be executed on guest
__HELP__

function usage() {
  local _synopsis="[--user -u VMUSER | --dry-run | --help -h -?]"
  cat <<-__USAGE__
	Establish SSH session with virtual machine.

	Usage: ${clishe_scriptname} VMNAME ${_synopsis} [COMMAND]
	where

	${clishe_helplines}

	Open an SSH session with VMNAME so VMNAME can be controlled remotely.
	__USAGE__
  exit 0
}

clishe_process_options "$@"

DRY_RUN="${DRY_RUN:-}" VMUSER="${VMUSER:-}" \
vmtools_vmssh "${VMNAME}" "${clishe_tailopts[@]}"
